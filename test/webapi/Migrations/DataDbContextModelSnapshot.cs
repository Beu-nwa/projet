// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using webapi.Datas;

#nullable disable

namespace webapi.Migrations
{
    [DbContext(typeof(DataDbContext))]
    partial class DataDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("webapi.Models.Training", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DurationDay")
                        .HasColumnType("int");

                    b.Property<string>("ImgPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCertified")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TrainingCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TrainingCategoryId");

                    b.ToTable("Trainings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            DurationDay = 30,
                            ImgPath = "logo-seo-premium.png",
                            IsCertified = true,
                            Name = "SEO Premium",
                            Price = 249.0,
                            Score = 3,
                            StartDate = new DateTime(2023, 7, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrainingCategoryId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Typé.",
                            DurationDay = 90,
                            ImgPath = "logo-csharp.png",
                            IsCertified = false,
                            Name = "C#",
                            Price = 299.0,
                            Score = 4,
                            StartDate = new DateTime(2023, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrainingCategoryId = 2
                        },
                        new
                        {
                            Id = 3,
                            Description = "un langage très permissif et très pratiqué.",
                            DurationDay = 90,
                            ImgPath = "logo-js.png",
                            IsCertified = false,
                            Name = "JavaScript",
                            Price = 199.0,
                            Score = 9,
                            StartDate = new DateTime(2023, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrainingCategoryId = 2
                        },
                        new
                        {
                            Id = 4,
                            Description = "Les bases...",
                            DurationDay = 120,
                            ImgPath = "logo-html-css.png",
                            IsCertified = false,
                            Name = "HTML/CSS",
                            Price = 149.0,
                            Score = 2,
                            StartDate = new DateTime(2023, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrainingCategoryId = 2
                        },
                        new
                        {
                            Id = 5,
                            Description = "Un Framework très utilisé.",
                            DurationDay = 50,
                            ImgPath = "logo-react.png",
                            IsCertified = true,
                            Name = "React",
                            Price = 289.0,
                            Score = 3,
                            StartDate = new DateTime(2023, 5, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrainingCategoryId = 3
                        },
                        new
                        {
                            Id = 6,
                            Description = "Un Framework plus moderne et de plus en plus utilisé.",
                            DurationDay = 60,
                            ImgPath = "logo-vuejs.png",
                            IsCertified = false,
                            Name = "Vue.js",
                            Price = 299.0,
                            Score = 2,
                            StartDate = new DateTime(2023, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrainingCategoryId = 3
                        },
                        new
                        {
                            Id = 7,
                            Description = "Un framework plus complexe.",
                            DurationDay = 90,
                            ImgPath = "logo-angular.png",
                            IsCertified = true,
                            Name = "Angular",
                            Price = 499.0,
                            Score = 4,
                            StartDate = new DateTime(2023, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrainingCategoryId = 3
                        },
                        new
                        {
                            Id = 8,
                            Description = "Très utile dès que l'on intègre un projet en équipe",
                            DurationDay = 90,
                            ImgPath = "logo-git.png",
                            IsCertified = false,
                            Name = "Git",
                            Price = 180.0,
                            Score = 8,
                            StartDate = new DateTime(2023, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrainingCategoryId = 4
                        },
                        new
                        {
                            Id = 9,
                            Description = "Connais pas.",
                            DurationDay = 180,
                            ImgPath = "logo-sass.png",
                            IsCertified = false,
                            Name = "Sass",
                            Price = 199.0,
                            Score = 3,
                            StartDate = new DateTime(2023, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrainingCategoryId = 3
                        },
                        new
                        {
                            Id = 10,
                            Description = "Apprendre à faire des CVs (lol)",
                            DurationDay = 2,
                            ImgPath = "",
                            IsCertified = false,
                            Name = "TRE",
                            Price = 599.0,
                            Score = 10,
                            StartDate = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrainingCategoryId = 5
                        });
                });

            modelBuilder.Entity("webapi.Models.TrainingCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            Name = "Referencement"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Apprendre à programmer dans un langage défini.",
                            Name = "Langage de programmation"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Un framework est une structure (réelle ou conceptuelle) conçue pour servir de guide à l'élaboration d'un système qui développe la structure en une organisation utile.",
                            Name = "Framework"
                        },
                        new
                        {
                            Id = 4,
                            Description = "",
                            Name = "Outils collaboratifs"
                        },
                        new
                        {
                            Id = 5,
                            Description = "",
                            Name = "Non spécifié"
                        });
                });

            modelBuilder.Entity("webapi.Models.Training", b =>
                {
                    b.HasOne("webapi.Models.TrainingCategory", "Category")
                        .WithMany("Trainings")
                        .HasForeignKey("TrainingCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("webapi.Models.TrainingCategory", b =>
                {
                    b.Navigation("Trainings");
                });
#pragma warning restore 612, 618
        }
    }
}
